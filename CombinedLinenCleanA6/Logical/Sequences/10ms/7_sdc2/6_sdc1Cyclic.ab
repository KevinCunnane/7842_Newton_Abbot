PROGRAM _CYCLIC
	(* cyclic program *)

;Sequence 6 - Discharger 1 D[906]
a

;-----------------------------------------
;Revision 1.00 19/12/2005 D.J. First Issue
;-----------------------------------------

DischargerEnable 		= ((D[22] > 0) AND NOT Std.HaltSys)

I_BagAtBuffer			  = X[3].X04
I_BagAtDischarger = X[3].X03
I_SafetyRunning       = X[8].X15

I_OpenBag				= X[7].X15 OR TestDrop           ;X[23].X01
I_LoadDropped			= X[7].X13 OR TestDischarger  ;X[23].X02
I_BagEmpty              = X[2].X13

O_Steadys				= FALSE ;Y[6].Y01
O_OpenBuffer 			= FALSE ;Y[6].Y02
O_OpenBag				= FALSE ;Y[6].Y03
O_OpenStop				= FALSE ;Y[6].Y04
O_Closer				= FALSE ;Y[6].Y05
O_BagReady          = FALSE

;Alarm
Alarm[7].Name 			= 0 ;Clear sequence alarm name
Alarm[7].Bag 			= 43
Alarm[7].Beacon			= TRUE
Alarm[7].Extra			= 0
Alarm[7].Time			= 3000

;Setup Sequence
STEP = D[907]
;Setup Pulse contact
PLS = (STEP <> LASTSTEP)
LASTSTEP = STEP

;Step 0 - Disabled
IF (STEP = 0) THEN
	;Disabled
ENDIF

;Check Status - Bag settled at buffer, no bag at discharger, bag at buffer on screen and no bag at discharger on the screen
TON_10ms(I_BagAtBuffer,300,SettledAtBuffer,SettledAtBufferET)
IF (STEP = 1) THEN
	IF DischargerEnable AND SettledAtBuffer AND  NOT I_BagAtDischarger AND (Bag[43].Cat = 0) AND (Bag[6].Cat > 0)THEN
		D[907] = 2
	ENDIF
	IF (Bag[43].Cat > 0) THEN
		Alarm[7].Name = almBagDataError
	ELSE IF I_BagAtDischarger THEN
		Alarm[7].Name = almSwitchFault
	ENDIF
ENDIF

;Wait for bag in discharger
IF (STEP = 2) THEN
	O_OpenBuffer 	= TRUE
	IF (Bag[43].Cat = 0) AND (Bag[6].Cat>0) THEN
		Bag[43] = Bag[6]
		Bag[6]   = Bag[0]
	ENDIF
	IF I_BagAtDischarger THEN
		D[907] = 3
	ENDIF
	Alarm[7].Name = almBagNotArrived
ENDIF

;Let bag settle in discharger
TON_10ms(((STEP = 3) AND I_BagAtDischarger),1000,SettledAtDischarger,SettledAtDischargerET)
IF (STEP = 3) THEN
;	IF (Bag[228].Cat = 0) AND (Bag[227].Cat > 0) THEN
;		Bag[228] = Bag[227]
;		Bag[227] = Bag[0]
;	ENDIF
	IF SettledAtDischarger THEN
		D[907] = 4
	ENDIF
	Alarm[7].Name = almBagNotSettled
ENDIF

;Allow steadys to move down
TON_10ms((STEP = 4),400,SteadysDown,SteadysDownET)
IF (STEP = 4) THEN
	IF SteadysDown AND (Bag[43].Cat <> Std.MaxCats)  THEN
		D[907] = 5
	ENDIF
	IF (Bag[43].Cat = Std.MaxCats) AND SteadysDown THEN
		D[907] = 8
	ENDIF
ENDIF

;Steady cylinders on from steps 4 - 9
O_Steadys = ((STEP >= 4) AND (STEP <= 9))

;Bag opener on from step 5 - 8
O_OpenBag = ((STEP >= 6) AND (STEP <= 8))

;Wash Codes
;IF (STEP = 4) OR (STEP = 5) THEN
;
;;round up weight to give to wash machine
;	Remainder = SINT(Bag[228].Wgt MOD 10)
;	IF (Remainder > 4) THEN
;		WgtRound = (Bag[228].Wgt + 10)
;	ELSE
;		WgtRound = Bag[228].Wgt
;	ENDIF
;
;
;;Codes to CBW
;	CAN[1].Category = Bag[228].Cat
;	CAN[1].Customer = Bag[228].Cus
;	CAN[1].Weight   = (WgtRound / 10)
;ELSE
;	CAN[1].Category = 0
;	CAN[1].Customer = 0
;	CAN[1].Weight   = 0
;ENDIF


;Bag Ready to Washing Machine
IF (STEP = 5) THEN
	O_BagReady = TRUE
	O_Closer        = TRUE
	IF I_OpenBag OR TestDischarger THEN
		D[907] = 6
	ENDIF

ENDIF



;Open Bag Until LoadDropped recieved and has been open for 6 seconds
TON_10ms((STEP = 6),600,MinOpen,MinOpenET) ;ET means Elapsed Time
IF (STEP = 6) THEN
	IF I_LoadDropped THEN
		LoadDropped = TRUE
	ENDIF
	IF (LoadDropped AND MinOpen) THEN
		D[907] = 7
	ENDIF
	Alarm[7].Name = almLoadNotDropped
	ELSE
	LoadDropped = FALSE
ENDIF

;Change display to empty bag
IF (STEP = 7) THEN
	//O_BagReady = Std.Clock500ms
	IF (NOT I_OpenBag  OR TestDrop) THEN ;AND I_BagEmpty) OR TestDrop) THEN
		Bag[43].Cat 	= Std.MaxCats
		D[907] 			= 8
	ENDIF
	Alarm[7].Name = almGeneralSequence
ENDIF

;Close bag
TON_10ms((STEP = 8),700,CloserDown,CloserDownET)
IF (STEP = 8) THEN
	O_Closer = TRUE
	IF CloserDown THEN
		D[907] = 9
	ENDIF
ENDIF

;Allow closer to go back up
TON_10ms((STEP = 9),700,CloserUp,CloserUpET)
IF (STEP = 9) THEN
	IF CloserUp THEN
		D[907] = 10
	ENDIF
ENDIF

;Allow steadys to go up
TON_10ms((STEP = 10),400,SteadyUp,SteadyUpET)
IF (STEP = 10) THEN
	IF SteadyUp THEN
		D[907] = 11
	ENDIF
ENDIF

;Check for space on empty bag buffer
IF (STEP = 11) THEN
 
	IF Enable.CDC[2] OR (D[905] = 3) THEN
		D[907] = 12
	ENDIF
	ELSE
	//	Request.CDC[1] = FALSE
ENDIF

;Open buffer stop - unitl bag out
IF (STEP = 12) THEN
	O_OpenStop = TRUE
	IF PLS THEN
		;C[14] = 0
	ENDIF
	Bag[43].Cat = 0
	Bag[43].Cus = 0
	Bag[43].Wgt = 0
	IF (D[905] <>3) THEN
		D[907] = 1
	ENDIF
	Alarm[7].Name = almBagNotReleased
ENDIF

;Alarms
TimerAlarm.IN 	= NOT PLS AND (Alarm[7].Name > 0)
TimerAlarm.PT 	= Alarm[7].Time
TimerAlarm FUB TON_10ms()
Alarm[7].On 	= TimerAlarm.Q
Alarm[7].ET 	= TimerAlarm.ET

;Outputs


Y[3].Y05 = O_OpenBuffer
Y[3].Y06 = O_Steadys
Y[3].Y07 = O_OpenBag
Y[3].Y08 = O_OpenStop
Y[3].Y09 = O_Closer

END_PROGRAM

