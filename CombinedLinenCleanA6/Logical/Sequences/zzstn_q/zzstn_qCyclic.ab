PROGRAM _CYCLIC
 	(* cyclic program *)

;Sorting Stations Into Q with provision for Pushbutton into Q
;------------------------------------------------------------

;Set "AutoMaticRelease" in "zzconst"
;Nothing to change!

;-------------------------------------------
;Revision 1.00 - 19/12/2005 D.J. First Issue
;-------------------------------------------

StnsInQ 	= FALSE
StnsToPurge = FALSE

LOOP z = 1 TO Std.MaxWeighstations DO

	n = z

	;Force to Single station for testing / monitoring
	IF TestStation > 0 THEN
		n = TestStation
	ENDIF

	ManualRelease 	= (D[800 + n] = 1)
	PurgeStation	= (D[800 + n] = 2)

	;For testing force valid weight values
	IF TestWeight > 0 THEN
		Stn[n].Weight = TestWeight
	ENDIF

	;If Current weight is less than the Min Release Weight or SP2 is set below the Min Release Weight or SP3 is set below the Min Release Weight
	ValidWeight = ((Stn[n].Weight > Std.MinReleaseWeight) AND (D[3800 + n] > Std.MinReleaseWeight) AND  (D[3900 + n] > Std.MinReleaseWeight))

	;Testing
	;ValidWeight = TRUE

	;SP1 Reached - Approaching Weight
	SP1Reached = (Stn[n].Weight > D[3700 + n])

	;SP2 Reached - At Release Weight
	SP2Reached = (Stn[n].Weight > D[3800 + n])

	;SP3 Reached - Over Weight
	SP3Reached = (Stn[n].Weight > D[3900 + n])

	;Manual Release from TrackView
	IF ManualRelease THEN
		IF (ValidWeight AND (NOT SP3Reached)) THEN
			Stn[n].ManualRelease = TRUE
		ELSE IF (ValidWeight AND Std.EnableOverUnderRelease) THEN ;Enable Release KeySwitch
			Stn[n].ManualRelease = TRUE
		ENDIF
		D[800 + n] = 0 ;Cancel the Manual Release
	ENDIF

	IF PurgeStation THEN
		StnsToPurge = TRUE
	ENDIF

	;Enter Station into Q
	StnIntoQ = FALSE
	IF (Std.AutoMaticRelease AND SP2Reached AND ValidWeight AND (NOT SP3Reached)) THEN
		StnIntoQ = TRUE
	ELSE IF ((NOT Std.AutoMaticRelease) AND Stn[n].ReleaseButton AND SP2Reached AND ValidWeight AND (NOT SP3Reached)) THEN
		StnIntoQ = TRUE
	ELSE IF ((NOT Std.AutoMaticRelease) AND Stn[n].ReleaseButton AND Std.EnableOverUnderRelease AND ValidWeight) THEN ;AND (SP3Reached = FALSE) THEN
		StnIntoQ = TRUE
	ELSE IF (Stn[n].ManualRelease AND ValidWeight) THEN
		StnIntoQ = TRUE
	ENDIF


	IF StnIntoQ THEN
		StnsInQ = TRUE
		IF (Stn[n].QTime < $7FFF) THEN ;Keep within Integer range for PC
			Stn[n].QTime = (Stn[n].QTime + 1)
		ENDIF
	ELSE
		Stn[n].QTime = 0
	ENDIF

	D[100 + n] = Stn[n].QTime ;Set the time in the Q for Use by PC

	Stn[n].LampOn = FALSE
	Stn[n].SP1	= FALSE
	Stn[n].SP2	= FALSE
	Stn[n].SP3	= FALSE
	Stn[n].CloseFlap = FALSE
	Stn[n].LampFlashFast = FALSE
	IF (BIT_TST(D[998],0) = 1) THEN ;LampTest
		Stn[n].SP2 = TRUE
		Stn[n].CloseFlap = TRUE
	ELSE IF SP3Reached THEN
		Stn[n].SP3 = TRUE
		Stn[n].LampFlashFast = TRUE
		Stn[n].CloseFlap = TRUE
	ELSE IF SP2Reached AND NOT SP3Reached THEN
		Stn[n].SP2 = TRUE
		Stn[n].LampOn
		Stn[n].CloseFlap = TRUE
	ELSE IF SP1Reached AND NOT SP3Reached THEN
		Stn[n].SP1 = TRUE
	ENDIF

ENDLOOP

Std.StnsInQ 	= StnsInQ
Std.StnsToPurge = StnsToPurge
END_PROGRAM

