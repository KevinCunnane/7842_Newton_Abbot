PROGRAM _CYCLIC
	(* cyclic program *)

;Sequence 6 - Discharger 1 D[906]
a

;-----------------------------------------
;Revision 1.00 19/12/2005 D.J. First Issue
;-----------------------------------------

DischargerEnable 		= ((D[17] > 0) AND NOT Std.HaltSys)

I_BagAtBuffer			  = X[3].X06
I_BagAtDischarger	= X[3].X05
I_BagEmpty        = X[6].X01

I_OpenBag				= CAN[2].DropLoad OR TestDrop           ;X[23].X01
I_LoadDropped			= CAN[2].LoadDropped OR TestDischarger  ;X[23].X02


O_Steadys				= FALSE ;Y[6].Y01
O_OpenBuffer 			= FALSE ;Y[6].Y02
O_OpenBag				= FALSE ;Y[6].Y03
O_OpenStop				= FALSE ;Y[6].Y04
O_Closer				= FALSE ;Y[6].Y05


;Alarm
Alarm[7].Name 			= 0 ;Clear sequence alarm name
Alarm[7].Bag 			= 231
Alarm[7].Beacon			= TRUE
Alarm[7].Extra			= 0
Alarm[7].Time			= 3000

;Setup Sequence
STEP = D[907]
;Setup Pulse contact
PLS = (STEP <> LASTSTEP)
LASTSTEP = STEP

;Step 0 - Disabled
IF (STEP = 0) THEN
	;Disabled
ENDIF

;Check Status - Bag settled at buffer, no bag at discharger, bag at buffer on screen and no bag at discharger on the screen
TON_10ms(I_BagAtBuffer,300,SettledAtBuffer,SettledAtBufferET)
IF (STEP = 1) THEN
	IF (DischargerEnable AND SettledAtBuffer AND NOT I_BagAtDischarger AND (Bag[231].Cat = 0) AND NOT Std.HaltSys) THEN
		D[907] = 2
	ENDIF
	IF (Bag[231].Cat > 0) THEN
		Alarm[7].Name = almBagDataError
	ELSE IF I_BagAtDischarger THEN
		Alarm[7].Name = almSwitchFault
	ENDIF
ENDIF

;Wait for bag in discharger
IF (STEP = 2) THEN
	O_OpenBuffer 	= TRUE
	;Enable.SDC[1] 	= TRUE
	IF I_BagAtDischarger THEN
		D[907] = 3
	ENDIF
	Alarm[7].Name = almBagNotArrived
ENDIF

;Let bag settle in discharger
TON_10ms(((STEP = 3) AND I_BagAtDischarger),1000,SettledAtDischarger,SettledAtDischargerET)
IF (STEP = 3) THEN
	IF (Bag[231].Cat = 0) AND (Bag[229].Cat > 0) THEN
		Bag[231] = Bag[229]
		Bag[229] = Bag[0]
	ENDIF
	IF SettledAtDischarger THEN
		D[907] = 4
	ENDIF
	Alarm[7].Name = almBagNotSettled
ENDIF

;Allow steadys to move down
TON_10ms((STEP = 4),400,SteadysDown,SteadysDownET)
IF (STEP = 4) THEN
	IF SteadysDown AND (Bag[231].Cat <> Std.MaxCats)  THEN
		D[907] = 5
	ENDIF
	IF (Bag[231].Cat = Std.MaxCats) AND SteadysDown THEN
		D[907] = 8
	ENDIF
ENDIF

;Steady cylinders on from steps 4 - 9
O_Steadys = ((STEP >= 4) AND (STEP <= 9))

;Bag opener on from step 5 - 8
O_OpenBag = ((STEP >= 6) AND (STEP <= 8))

;Wash Codes
IF (STEP = 4) OR (STEP = 5) THEN

;round up weight to give to wash machine
	Remainder = SINT(Bag[231].Wgt MOD 10)
	IF (Remainder > 4) THEN
		WgtRound = (Bag[231].Wgt + 10)
	ELSE
		WgtRound = Bag[231].Wgt
	ENDIF


;Codes to CBW
	CAN[2].Category = Bag[231].Cat
	CAN[2].Customer = Bag[231].Cus
	CAN[2].Weight   = (WgtRound / 10)
ELSE
	CAN[2].Category = 0
	CAN[2].Customer = 0
	CAN[2].Weight   = 0
ENDIF


;Bag Ready to Washing Machine
IF (STEP = 5) THEN
	CAN[2].BagReady = TRUE
	IF I_OpenBag OR TestDischarger THEN
		D[907] = 6
	ENDIF
ELSE
	CAN[2].BagReady = FALSE
ENDIF

;Set LoadDropped to False
IF (STEP <> 6) THEN
	LoadDropped = FALSE
ENDIF

;Open Bag Until LoadDropped recieved and has been open for 6 seconds
TON_10ms((STEP = 6),600,MinOpen,MinOpenET) ;ET means Elapsed Time
IF (STEP = 6) THEN

	IF I_LoadDropped OR TestDischarger THEN
	;IF I_BagEmpty THEN
		LoadDropped = TRUE
	ENDIF

	IF (LoadDropped AND MinOpen) THEN
		;Write Report
		;------------
		IF (ReportUnloading[1].Cat = 0) THEN
			ReportUnloading[2].Cat = UINT(Bag[231].Cat)	;Category
			ReportUnloading[2].Cus = UINT(Bag[231].Cus)   ;Customer
			ReportUnloading[2].Wgt = Bag[231].Wgt		;Weight
			ReportUnloading[2].Cnt = 0					;Count
			ReportUnloading[2].Stn = 0					;Station
			ReportUnloading[2].Mcn = 2					;Machine
			;Bag[201]               = Bag[120]           ;move bag into machine tracking
		ENDIF
	ENDIF
	IF (LoadDropped AND MinOpen) THEN
		D[907] = 7
	ENDIF
	Alarm[7].Name = almLoadNotDropped
ENDIF

;Change display to empty bag
IF (STEP = 7) THEN
	IF ((NOT I_OpenBag AND NOT I_LoadDropped OR TestDrop)) THEN ;AND I_BagEmpty) OR TestDrop) THEN
		Bag[231].Cat 	= Std.MaxCats
		D[907] 			= 8
	ENDIF
	Alarm[7].Name = almGeneralSequence
ENDIF

;Close bag
TON_10ms((STEP = 8),700,CloserDown,CloserDownET)
IF (STEP = 8) THEN
	O_Closer = TRUE
	IF CloserDown THEN
		D[907] = 9
	ENDIF
ENDIF

;Allow closer to go back up
TON_10ms((STEP = 9),700,CloserUp,CloserUpET)
IF (STEP = 9) THEN
	IF CloserUp THEN
		D[907] = 10
	ENDIF
ENDIF

;Allow steadys to go up
TON_10ms((STEP = 10),400,SteadyUp,SteadyUpET)
IF (STEP = 10) THEN
	IF SteadyUp THEN
		D[907] = 11
	ENDIF
ENDIF

;Check for space on empty bag buffer
IF (STEP = 11) THEN
		Request.SDC[2] = TRUE
	IF Enable.SDC[2] THEN ;AND NOT I_BagAtEmptyBuffer AND NOT O_EmptyBagBufferOpen) THEN
		D[907] = 12
	ENDIF
	ELSE
			Request.SDC[2] = FALSE
ENDIF

;Open buffer stop - unitl bag out
IF (STEP = 12) THEN
	O_OpenStop = TRUE
	IF PLS THEN
		;C[14] = 0
	ENDIF
	Bag[231].Cat = 0
	Bag[231].Cus = 0
	Bag[231].Wgt = 0
	IF NOT Enable.SDC[2] THEN
		D[907] = 1
	ENDIF
	Alarm[7].Name = almBagNotReleased
ENDIF

;Alarms
TimerAlarm.IN 	= NOT PLS AND (Alarm[7].Name > 0)
TimerAlarm.PT 	= Alarm[7].Time
TimerAlarm FUB TON_10ms()
Alarm[7].On 	= TimerAlarm.Q
Alarm[7].ET 	= TimerAlarm.ET

;Outputs
Y[3].Y06 = O_OpenBuffer
Y[3].Y07 = O_Steadys
Y[3].Y08 = O_OpenBag
Y[3].Y09 = O_OpenStop
Y[3].Y10 = O_Closer

END_PROGRAM

